openapi: 3.0.0
info:
  title: Truck Import API
  version: 1.0.0
  description: API для работы с категориями, моделями и деталями

servers:
  - url: http://127.0.0.1:8000/api/v1/client
    description: Local development server
  - url: https://truck-import.laravel.cloud//api/v1/client
    description: Test development server

paths:
  /categories/{brandSlug}:
    get:
      tags:
        - Categories
      summary: Получить информацию о бренде и его моделях
      operationId: showBrand
      parameters:
        - name: brandSlug
          in: path
          required: true
          schema:
            type: string
          description: Уникальный идентификатор бренда
      responses:
        '200':
          description: Успешный запрос
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BrandResponse'
        '404':
          description: Бренд не найден
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /categories/{brandSlug}/models/{modelSlug}:
    get:
      tags:
        - Categories
      summary: Получить информацию о модели и ее деталях
      operationId: showModel
      parameters:
        - name: brandSlug
          in: path
          required: true
          schema:
            type: string
          description: Уникальный идентификатор бренда
        - name: modelSlug
          in: path
          required: true
          schema:
            type: string
          description: Уникальный идентификатор модели
      responses:
        '200':
          description: Успешный запрос
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelResponse'
        '404':
          description: Модель не найдена
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /categories/{brandSlug}/parts/{partSlug}:
    get:
      tags:
        - Categories
      summary: Получить информацию о детали и ее продуктах
      operationId: showPart
      parameters:
        - name: brandSlug
          in: path
          required: true
          schema:
            type: string
          description: Уникальный идентификатор бренда
        - name: partSlug
          in: path
          required: true
          schema:
            type: string
          description: Уникальный идентификатор детали
      responses:
        '200':
          description: Успешный запрос
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PartResponse'
        '404':
          description: Деталь не найдена
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /products/{article}:
    get:
      tags:
        - Products
      summary: Получить информацию о продукте
      operationId: show
      parameters:
        - name: article
          in: path
          required: true
          schema:
            type: string
          description: Уникальный идентификатор продукта
      responses:
        '200':
          description: Успешный запрос
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductResponse'
        '404':
          description: Деталь не найдена
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

components:
  schemas:
    # Основные схемы ответов
    BrandResponse:
      type: object
      properties:
        id:
          type: integer
          example: 1
        title:
          type: string
          example: "sit"
        description:
          type: string
          example: "Quia et aut autem in quidem iusto..."
        content:
          type: string
          example: "<html>...</html>"
        image_url:
          type: string
          format: uri
          example: "https://via.placeholder.com/640x480.png/003333?text=consequatur"
        slug:
          type: string
          example: "accusamus-dolorum-animi-est-dolores-cum-consequatur-architecto-unde"
        metatags:
          $ref: '#/components/schemas/Metatags'
        children:
          type: array
          items:
            $ref: '#/components/schemas/CategoryShort'

    ModelResponse:
      type: object
      properties:
        id:
          type: integer
          example: 24
        title:
          type: string
          example: "pariatur"
        description:
          type: string
          example: "Itaque aut expedita illo id..."
        content:
          type: string
          example: "<html>...</html>"
        image_url:
          type: string
          format: uri
          example: "https://via.placeholder.com/640x480.png/000099?text=eum"
        slug:
          type: string
          example: "inventore-explicabo-rerum-excepturi-est-dolorum"
        metatags:
          $ref: '#/components/schemas/Metatags'
        children:
          type: array
          items: {}

    PartResponse:
      type: object
      properties:
        id:
          type: integer
          example: 26
        title:
          type: string
          example: "sint"
        description:
          type: string
          example: "Est saepe necessitatibus dolor ab..."
        content:
          type: string
          example: "<html>...</html>"
        image_url:
          type: string
          format: uri
          example: "https://via.placeholder.com/640x480.png/00cc99?text=earum"
        slug:
          type: string
          example: "aut"
        metatags:
          $ref: '#/components/schemas/Metatags'
        products:
          type: array
          items:
            $ref: '#/components/schemas/ProductShort'

    ProductResponse:
      type: object
      properties:
        id:
          type: integer
          example: 42
        brand_id:
          type: integer
          example: 3
        article:
          type: string
          example: "235364578565435"
        title:
          type: string
          example: "Тормоза без тормозов"
        description:
          type: string
          nullable: true
          example: null
        price:
          type: string
          example: "123 копейки"
        delivery:
          type: string
          nullable: true
          example: null
        quantity:
          type: integer
          example: 4
        image_url:
          type: string
          format: uri
          example: "http://127.0.0.1:8000/storage/images/HSuKebOvGLORjSLZvVUMJQetx0lheeKQk5mgdzs7.png"
        category_id:
          type: integer
          example: 26
        metatags:
          $ref: "#/components/schemas/Metatags" # Ссылка на уже определённый объект
        characteristics:
          type: array
          items:
            type: object
            properties:
              title:
                type: string
                example: "1"
              description:
                type: string
                example: "1"


    # Вспомогательные схемы
    CategoryShort:
      type: object
      properties:
        title:
          type: string
          example: "pariatur"
        image_url:
          type: string
          format: uri
          example: "https://via.placeholder.com/640x480.png/000099?text=eum"
        slug:
          type: string
          example: "inventore-explicabo-rerum-excepturi-est-dolorum"

    Metatags:
      type: object
      properties:
        meta_h1:
          type: string
          example: "Заголовок"
        meta_title:
          type: string
          example: "Покупайте только у нас!"
        meta_description:
          type: string
          example: "Много покупок и 0 скидок!"

    ProductShort:
      type: object
      properties:
        article:
          type: string
          example: "80"
        title:
          type: string
          example: "Miss"
        price:
          type: string
          example: "Never."
        quantity:
          type: integer
          example: 380
        image_url:
          type: string
          format: uri
          example: "https://via.placeholder.com/640x480.png/002244?text=dignissimos"

    ErrorResponse:
      type: object
      properties:
        message:
          type: string
          example: "Resource not found"
        code:
          type: integer
          example: 404
